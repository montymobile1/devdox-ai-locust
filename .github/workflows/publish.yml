name: Publish to PyPI

on:
  release:
    types: [published]
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
      confirm_production:
        description: 'Type "CONFIRM" to publish to production PyPI'
        required: false
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'pypi' }}

    steps:
    - name: Validate production deployment
      if: github.event.inputs.environment == 'pypi' && github.event.inputs.confirm_production != 'CONFIRM'
      run: |
        echo "Production deployment requires confirmation"
        echo "Please re-run with confirm_production set to 'CONFIRM'"
        exit 1

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e ".[dev,test]"

    - name: Run quality checks
      run: |
        make format
        make lint
        make test-fast

    - name: Build package
      run: |
        make clean
        make build

    - name: Check package
      run: |
        twine check dist/*
        make inspect-build

    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        TWINE_REPOSITORY: testpypi
      run: |
        twine upload dist/*

    - name: Publish to PyPI (Production)
      if: github.event.inputs.environment == 'pypi' || github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*