name: Publish to PyPI

on:
  release:
    types: [published]
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
      confirm_production:
        description: 'Type "CONFIRM" to publish to production PyPI'
        required: false
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.environment || 'pypi' }}
      url: ${{ github.event.inputs.environment == 'testpypi' && 'https://test.pypi.org/p/devdox-ai-locust' || 'https://pypi.org/p/devdox-ai-locust' }}
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Validate production deployment
      if: github.event.inputs.environment == 'pypi' && github.event.inputs.confirm_production != 'CONFIRM'
      run: |
        echo "❌ Production deployment requires confirmation"
        echo "Please re-run with confirm_production set to 'CONFIRM'"
        exit 1
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e ".[dev,test]"
    
    - name: Run quality checks
      run: |
        make format
        make lint
        make test-fast  # Skip slow tests in CI
    
    - name: Build package
      run: |
        make clean
        make build
    
    - name: Check package
      run: |
        twine check dist/*
        make inspect-build
    
    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true
        skip-existing: true
    
    - name: Publish to PyPI (Production)
      if: github.event.inputs.environment == 'pypi' || github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        skip-existing: true
    
    - name: Create deployment summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Package:** devdox-ai-locust" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** $(python -c 'import tomllib; print(tomllib.load(open("pyproject.toml", "rb"))["project"]["version"])')" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment || 'pypi' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.environment }}" = "testpypi" ]; then
          echo "📦 **Installation:** \`pip install --index-url https://test.pypi.org/simple/ devdox-ai-locust\`" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Package URL:** https://test.pypi.org/project/devdox-ai-locust/" >> $GITHUB_STEP_SUMMARY
        else
          echo "📦 **Installation:** \`pip install devdox-ai-locust\`" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Package URL:** https://pypi.org/project/devdox-ai-locust/" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔍 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Test the installation in a clean environment" >> $GITHUB_STEP_SUMMARY
        echo "2. Update project documentation with new version" >> $GITHUB_STEP_SUMMARY
        echo "3. Create release notes if this was a manual deployment" >> $GITHUB_STEP_SUMMARY
